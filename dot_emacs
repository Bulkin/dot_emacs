(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(TeX-fold-type-list (quote (macro math)))
 '(custom-safe-themes
   (quote
    ("8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4" "d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" "a8245b7cc985a0610d71f9852e9f2767ad1b852c2bdea6f4aadc12cce9c4d6d0" "e35ef4f72931a774769da2b0c863e11d94e60a9ad97fb9734e8b28c7ee40f49b" "01b9bfb4ddb9c7cc6e3720ad4fc71bd6f0351ba8014a992d672320cca0a676bd" default)))
 '(dired-listing-switches "-alh")
 '(egg-mode-key-prefix "C-x v")
 '(egg-quit-window-actions
   (quote
    ((egg-status-buffer-mode kill)
     (egg-log-buffer-mode kill)
     (egg-commit-buffer-mode kill)
     (egg-reflog-buffer-mode kill)
     (egg-diff-buffer-mode kill)
     (egg-file-log-buffer-mode kill))))
 '(elpy-rpc-backend "jedi")
 '(enable-remote-dir-locals t)
 '(fci-rule-color "#469bd2")
 '(fill-column 78)
 '(grep-command "grep -nHEr  ")
 '(grep-template "grep <X> <C> -nHEr <R> <F>")
 '(ispell-program-name "/usr/bin/aspell")
 '(latex-run-command "pdflatex")
 '(mlint-programs (quote ("" "")))
 '(paradox-github-token t)
 '(py-shell-name "python2")
 '(py-smart-indentation nil)
 '(python-indent-offset 4)
 '(python-shell-interpreter "ipython3")
 '(reftex-bibpath-environment-variables (quote ("BIBINPUTS" "TEXBIB" ".")))
 '(ropemacs-codeassist-maxfixes 3)
 '(ropemacs-guess-project t)
 '(safe-local-variable-values
   (quote
    ((eval when
           (fboundp
            (quote rainbow-mode))
           (rainbow-mode 1))
     (smart-tabs-mode)
     (c-file-style . linux)
     (c-file-style . stroustrup)
     (c-file-style . java)
     (indent-tabs-mode . true)
     (eval progn
           (c-set-offset
            (quote innamespace)
            (quote 0))
           (c-set-offset
            (quote inline-open)
            (quote 0))))))
 '(semantic-c-dependency-system-include-path (quote ("/usr/include" "/usr/msp430/include")))
 '(semantic-python-dependency-system-include-path (quote ("/usr/lib/python2.7")))
 '(session-use-package t nil (session))
 '(transient-mark-mode t)
 '(uniquify-buffer-name-style (quote post-forward) nil (uniquify))
 '(vc-directory-exclusion-list
   (quote
    ("SCCS" "RCS" "CVS" "MCVS" ".svn" ".hg" ".bzr" "_MTN" "_darcs" "{arch}")))
 '(vc-handled-backends (quote (RCS CVS SVN SCCS Bzr Hg Arch)))
 '(verilog-indent-level-module 3))

;; ---------- Functional ------------
(push "/usr/share/emacs/site-lisp" load-path)
(push "/usr/local/share/emacs/site-lisp" load-path)
(push "~/.emacs.d/modes/solarized-contrast" load-path)
(push "~/.emacs.d/modes" load-path)

(setenv "PAGER" "cat")

;; (require 'site-gentoo)

(defun kill-other-buffer ()
  "Kills the buffer currently in other window"
  (interactive)
  (other-window 1)
  (kill-this-buffer)
  (other-window -1))
(global-set-key "\C-x\C-k" 'kill-other-buffer)

;; (require 'ecb)
;; (require 'elscreen)

;; switching buffers
(ido-mode 1)
(defun iswitchb-local-keys ()
  (mapc (lambda (K) 
	  (let* ((key (car K)) (fun (cdr K)))
	    (define-key iswitchb-mode-map (edmacro-parse-keys key) fun)))
	'(("<right>" . iswitchb-next-match)
	  ("<left>"  . iswitchb-prev-match)
	  ("<up>"    . ignore             )
	  ("<down>"  . ignore             ))))
(add-hook 'iswitchb-define-mode-map-hook 'iswitchb-local-keys)
;; (require 'ido)
;; (ido-mode t)

(setq column-number-mode t)

(set-default-font "-xos4-terminus-medium-*-normal-*-18-*-*-*-*-*-*-*")

;; ascii-term colors
(setq ansi-color-names-vector
      ["#000000" "#b21818" "#18b218" "#BE5F00"
       "#6D85BA" "#b218b2" "#18b2b2" "#b2b2b2"])

;; set proper indentation
;; (require 'smart-tabs)
(setq default-tab-width 4)
;; tabs-with-spaces only in c-modes
(setq-default indent-tabs-mode nil)

;; make minibuffer nonresizable
(setq max-mini-window-height nil)

(show-paren-mode t)

;; remove toolbar
(tool-bar-mode -1)

;; remove scrollbar
(scroll-bar-mode 0)

;; Always end a file with a newline
(setq require-final-newline t)

;; Format the title-bar to always include the buffer name
(setq frame-title-format "emacs - %b")

;; disable scrollbars and menu bar
;;(scroll-bar-mode -1)
(menu-bar-mode -1)
;; flash instead of that annoying bell
(setq visible-bell t)

;; Don't add newlines to end of buffer when scrolling
(setq next-line-add-newlines nil)

;; Display time
(display-time)

;; Highlight marked region
(transient-mark-mode t)

;; set default c intendation style
;; (setq c-default-style '((c-mode . "k&r") (c++-mode . "k&r") (other . "k&r")))

;; Turn off the annoying default backup behaviour
(setq backup-directory-alist `(("." . "~/.emacs.d/backups")))
(setq delete-old-versions t
  kept-new-versions 6
  kept-old-versions 2
  version-control t)
(setq auto-save-file-name-transforms `(("\\([^/]*/\\)*\\([^/]*\\)\\'" "~/.emacs.d/autosaves/\\2" t)))

;; global keybindings
(global-set-key "\C-xr" 'revert-buffer)
(global-set-key "\C-\M-a" 'beginning-of-defun)
(global-set-key "\C-x\C-b" 'buffer-menu)


;;---------- additional modes ----------
(defun linux-c-mode ()
  "C mode with adjusted defaults for use with the Linux kernel."
  (interactive)
  (c-mode)
  (c-set-style "K&R")
  (setq tab-width 8)
  (setq indent-tabs-mode t)
  (setq c-basic-offset 8))

(c-add-style "base-cpp"
             '("linux"
               (indent-tabs-mode . t)
               (tab-width . 4)
               (c-basic-offset . 4)
               (c++-indent-level . 4)
               (c-offsets-alist . ((topmost-intro-cont . 0)
                                   (inline-open . 0)
                                   (innamespace . 0)))))
(c-add-style "shurik-cpp"
             '("base-cpp"
               (indent-tabs-mode . nil)
               (tab-width . 4)
               (c-basic-offset . 2)
               (c++-indent-level . 2)))

(c-add-style "spaces-cpp"
             '("base-cpp"
               (indent-tabs-mode . nil)
               (tab-width . 4)
               (c-basic-offset . 4)
               (c++-indent-level . 4)))


(put 'upcase-region 'disabled nil)
(put 'narrow-to-region 'disabled nil)

;;;; load lang-specific options
(load-file "~/.emacs.d/load_cedet.el")
(load-file "~/.emacs.d/load_packages.el")
;;(load-file "~/.emacs.d/load_python.el")
(load-file "~/.emacs.d/load_misc.el")

;; solarized requires dash
(require 'solarized)
(load-theme 'solarized-light t)

(let ((proj-file "~/.emacs.d/load_projects.el"))
  (if (file-readable-p proj-file)
      (load-file proj-file)))

;;(require 'irfc)
;;(add-to-list 'auto-mode-alist '("\\rfc[0-9]+.txt\\'" . irfc-mode))

(setq c-default-style '((c-mode . "gnu")
                        (c++-mode . "base-cpp")
                        (other . "gnu")))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
